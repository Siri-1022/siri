#include<stdio.h>
int main()
{
int n,temp,sum=0;
scanf("%d",&n);
temp=n;
while(n>0)
{
r=n%10;
sum=sum+(r*r*r);
n=n/10;
}
if(temp==sum)
printf("Armstrong Number);
else
printf("Not Armstrong Number)
----------------------
Factorial
 
def fact(n):
    if n==1:
        return 1
    return n*fact(n-1)
n=5
print(fact(n))
----------------------merge without sort
a1=[1,3,7,9,11]
a2=[5,8,13]
sm=[]
i=0
j=0
while i<len(a1) and j<len(a2):
    if a1[i]<a2[j]:
        sm.append(a1[i])
        i=i+1
    else:
        sm.append(a2[j])
        j=j+1
if i==len(a1):
    sm=sm+a2[j:]           ------------or sm=sm+a1[i:]+a2[j:]
	if j==len(a2):
-----------------------
def merge(a,b):
    i=0
    j=0
    sm=[]
    while i<len(a) and j<len(b):
        if a[i]<b[j]:
            sm.append(a[i])
            i=i+1
        else:
            sm.append(b[j])
            j=j+1
        sm=sm+a[i:]+b[j:]
        return sm
def mergesort(arr):
    n=len(arr)//2
    if len(arr)<2:
        return arr
    left=mergesort(arr[:n])
    right=mergesort(arr[n:])
    return merge(left,right)
arr=[1,2,3,4,5]
print(mergesort(arr))
---------------
def merge(a,b):
    i=0
    j=0
    sm=[]
    while i<len(a) and j<len(b):
        if a[i]<b[j]:
            sm.append(a[i])
            i=i+1
        else:
            sm.append(b[j])
            j=j+1
        sm=sm+a[i:]+b[j:]
        return sm
def mergesort(arr):
    n=len(arr)//2
    if len(arr)<2:
        return arr
    left=mergesort(arr[:n])
    right=mergesort(arr[n:])
    return merge(left,right)
arr=[1,2,3,4,5]
print(mergesort(arr))
--------------------quicksort
def quicksort(arr):
    if len(arr) < 2:
        return arr
    left,right,middle=[],[],[]
    pivot=arr[len(arr)//2]
    for i in arr:
        if i<pivot:
            left.append(i)
        elif i==pivot:
            middle.append(i)
        else:
            right.append(i)
    return quicksort(left) + middle + quicksort(right)
arr = [1, 9,55,67,12,90]
print(quicksort(arr))
        
    
    

        
    
    

